daemon off;

# this sets the user nginx will run as,
#and the number of worker processes
user nobody nogroup;
worker_processes  auto;

# setup where nginx will log errors to
# and where the nginx process id resides
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
	worker_connections  1024;
}

http {
	include       /etc/nginx/mime.types;
	include		nginx-gz.conf;
    resolver 	10.0.5.33 8.8.8.8 valid=1s;#use local DNS and override TTL to whatever value makes sense

	default_type application/octet-stream;
	access_log /tmp/nginx.access.log combined;

	# use the kernel sendfile
	sendfile        on;
	# prepend http headers before sendfile()
	tcp_nopush		on;
	tcp_nodelay    	on;

	# configure the virtual host
	server {
		root /usr/src/app/public;
		# port to listen for requests on
		listen 443 ssl;
		# maximum accepted body size of client request
		client_max_body_size 30M;
		# the server will close connections after this time
		ssl_certificate      /etc/ssl/nginx/certificate.pem;
		ssl_certificate_key  /etc/ssl/nginx/key.pem;
		## verify chain of trust of OCSP response using Root CA and Intermediate certs
		#ssl_trusted_certificate /etc/letsencrypt/live/inginious.ps.nginxlab.com/chain.pem;
		include nginx-ssl.conf;

		keepalive_timeout	3600s;
		keepalive_disable	none;
		keepalive_requests  100000;

		server_name user-manager.marathon.mesos;
		status_zone user-manager;

		location / { try_files $uri @app; }

		location @app {
			include uwsgi_params;
			uwsgi_pass unix:/tmp/uwsgi.sock;
		}
	}
}

