{% macro location(name, healthcheck, healthcheck_uri) -%}
  location /{{ name }}/ {
    proxy_pass https://{{ name }}/;
    proxy_set_header Host {{ name }};

    proxy_ssl_session_reuse     on;
    proxy_ssl_protocols         TLSv1.2;
    proxy_ssl_verify            off;
    proxy_read_timeout          3600;
    proxy_connect_timeout       3600;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Accept-Encoding "";

    {% if healthcheck %}
      health_check interval=2s fails=1 uri={{healthcheck_uri or "/"}};
    {% endif %}
  }
{%- endmacro %}

error_log /var/log/nginx/error.log debug;
worker_processes  auto;

events {
  worker_connections  1024;
}

daemon off;

http {

    include mime.types;
    include nginx-gz.conf;
    resolver {{ resolver.host }} valid={{ resolver.ttl }};  #use local DNS and override TTL to whatever value makes sense
    resolver_timeout 2s;

    client_max_body_size 30M;
    client_body_buffer_size 30M;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;

    # use the kernel sendfile
    sendfile        on;
    # prepend http headers before sendfile()
    tcp_nopush		  on;
    tcp_nodelay		  on;

  {% if services %}
    {% for name, service in services.iteritems() %}
    upstream {{ name }} {
    server        {{ service.server }} {{ service.service }} resolve;
    zone backend  64k;
    least_time 		last_byte;
    keepalive 		300;
    }
    {% endfor %}
  {% endif %}

    server {
        listen 80 default_server;
        keepalive_timeout	3600s;
        keepalive_disable	none;
        keepalive_requests  100000;
        rewrite_log on;

        server_name {{ name }};
        status_zone {{ name }};

        root {{ root }};

        include default-location.conf;

    {% if services %}
      {% for name, service in services.iteritems() %}
        {{ location(name, service.healthcheck, service.healthcheck_uri) }}
      {% endfor %}
    {% endif %}
        location = /status.html {
            root /usr/share/nginx/html/;
        }

        location /status {
            status;
        }

    }

}
