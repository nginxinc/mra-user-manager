---
swagger: "2.0"
info:
  description: "NGRA User Management API"
  version: "1.0.0"
  title: "NGRA User Management API"
  contact:
    name: "Ben Horowitz"
    email: "ben.horowitz@nginx.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "users.ps.ngra.nginxlab.com"
basePath: "/v1"
schemes:
- "http"
paths:
  /users:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "controllers.default_controller.create_user"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: false
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
      x-tags:
      - tag: "user"
      x-operationId: "create_user"
  /users/{username}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "controllers.default_controller.get_user_by_name"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing."
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
      x-tags:
      - tag: "user"
      x-operationId: "get_user_by_name"
    put:
      tags:
      - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "controllers.default_controller.update_user"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be deleted"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: false
        schema:
          $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
      x-tags:
      - tag: "user"
      x-operationId: "update_user"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "controllers.default_controller.delete_user"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
      x-tags:
      - tag: "user"
      x-operationId: "delete_user"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
